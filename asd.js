REGISTER USER ====>  <ref *2> Response {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    res: <ref *1> IncomingMessage {
      _events: {
        close: [Function: bound emit],
        error: [Array],
        data: [Array],
        end: [Array],
        readable: undefined
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 200804220,
        [Symbol(kDecoderValue)]: [StringDecoder],
        [Symbol(kEncodingValue)]: 'utf8'
      },
      _maxListeners: undefined,
      socket: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _closeAfterHandlingError: false,
        _events: [Object],
        _readableState: [ReadableState],
        _writableState: [WritableState],
        allowHalfOpen: false,
        _maxListeners: undefined,
        _eventsCount: 7,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        autoSelectFamilyAttemptedAddresses: [Array],
        [Symbol(async_id_symbol)]: 22,
        [Symbol(kHandle)]: [TCP],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'X-Powered-By',
        'Express',
        'Location',
        '/',
        'Vary',
        'Accept',
        'Content-Type',
        'text/plain; charset=utf-8',
        'Content-Length',
        '23',
        'Set-Cookie',
        'connect.sid=s%3AxZf5guMF1PPYA2Gc2d-roH-haJH4ndY8.YwWf5LplS1nb0CddoRjBEtJOOJ6alpLHC8EyZq1k8yk; Path=/; HttpOnly',
        'Date',
        'Mon, 15 Jul 2024 22:43:19 GMT',
        'Connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 302,
      statusMessage: 'Found',
      client: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _closeAfterHandlingError: false,
        _events: [Object],
        _readableState: [ReadableState],
        _writableState: [WritableState],
        allowHalfOpen: false,
        _maxListeners: undefined,
        _eventsCount: 7,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        autoSelectFamilyAttemptedAddresses: [Array],
        [Symbol(async_id_symbol)]: 22,
        [Symbol(kHandle)]: [TCP],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: true,
      _dumped: false,
      req: ClientRequest {
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 103,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: false,
        socket: [Socket],
        _header: 'POST /api/sessions/register HTTP/1.1\r\n' +
          'Host: localhost:8080\r\n' +
          'Accept-Encoding: gzip, deflate\r\n' +
          'Content-Type: application/json\r\n' +
          'Content-Length: 103\r\n' +
          'Connection: close\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: [Agent],
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/api/sessions/register',
        _ended: true,
        res: [Circular *1],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'localhost',
        protocol: 'http:',
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype],
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      _eventsCount: 4,
      text: 'Found. Redirecting to /',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        'x-powered-by': 'Express',
        location: '/',
        vary: 'Accept',
        'content-type': 'text/plain; charset=utf-8',
        'content-length': '23',
        'set-cookie': [Array],
        date: 'Mon, 15 Jul 2024 22:43:19 GMT',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 16,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    request: Test {
      _events: [Object: null prototype] { abort: [Function (anonymous)] },
      _eventsCount: 1,
      _maxListeners: undefined,
      _enableHttp2: false,
      _agent: false,
      _formData: null,
      method: 'POST',
      url: 'http://localhost:8080/api/sessions/register',
      _header: { 'content-type': 'application/json' },
      header: { 'Content-Type': 'application/json' },
      writable: true,
      _redirects: 1,
      _maxRedirects: 0,
      cookies: '',
      qs: {},
      _query: [],
      qsRaw: [],
      _redirectList: [],
      _streamRequest: false,
      _lookup: undefined,
      _buffer: true,
      app: 'http://localhost:8080',
      _asserts: [],
      _data: {
        firstName: 'prueba2',
        lastName: 'prueba2',
        age: 50,
        email: 'prueba2@prueba.com',
        password: 'prueba2'
      },
      req: ClientRequest {
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: 103,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        _closed: false,
        socket: [Socket],
        _header: 'POST /api/sessions/register HTTP/1.1\r\n' +
          'Host: localhost:8080\r\n' +
          'Accept-Encoding: gzip, deflate\r\n' +
          'Content-Type: application/json\r\n' +
          'Content-Length: 103\r\n' +
          'Connection: close\r\n' +
          '\r\n',
        _keepAliveTimeout: 0,
        _onPendingData: [Function: nop],
        agent: [Agent],
        socketPath: undefined,
        method: 'POST',
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        joinDuplicateHeaders: undefined,
        path: '/api/sessions/register',
        _ended: true,
        res: [IncomingMessage],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        reusedSocket: false,
        host: 'localhost',
        protocol: 'http:',
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype],
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      protocol: 'http:',
      host: 'localhost:8080',
      _endCalled: true,
      _callback: [Function (anonymous)],
      _fullfilledPromise: Promise { [Circular *2] },
      res: <ref *1> IncomingMessage {
        _events: [Object],
        _readableState: [ReadableState],
        _maxListeners: undefined,
        socket: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        rawHeaders: [Array],
        rawTrailers: [],
        joinDuplicateHeaders: undefined,
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 302,
        statusMessage: 'Found',
        client: [Socket],
        _consuming: true,
        _dumped: false,
        req: [ClientRequest],
        _eventsCount: 4,
        text: 'Found. Redirecting to /',
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kHeaders)]: [Object],
        [Symbol(kHeadersCount)]: 16,
        [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0
      },
      _resBuffered: true,
      response: [Circular *2],
      called: true,
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    req: <ref *3> ClientRequest {
      _events: [Object: null prototype] {
        drain: [Function],
        error: [Function (anonymous)],
        finish: [Function: requestOnFinish]
      },
      _eventsCount: 3,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 103,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _closeAfterHandlingError: false,
        _events: [Object],
        _readableState: [ReadableState],
        _writableState: [WritableState],
        allowHalfOpen: false,
        _maxListeners: undefined,
        _eventsCount: 7,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular *3],
        autoSelectFamilyAttemptedAddresses: [Array],
        [Symbol(async_id_symbol)]: 22,
        [Symbol(kHandle)]: [TCP],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _header: 'POST /api/sessions/register HTTP/1.1\r\n' +
        'Host: localhost:8080\r\n' +
        'Accept-Encoding: gzip, deflate\r\n' +
        'Content-Type: application/json\r\n' +
        'Content-Length: 103\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: Agent {
        _events: [Object: null prototype],
        _eventsCount: 2,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object: null prototype],
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype],
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: 'lifo',
        maxTotalSockets: Infinity,
        totalSocketCount: 1,
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false
      },
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/api/sessions/register',
      _ended: true,
      res: <ref *1> IncomingMessage {
        _events: [Object],
        _readableState: [ReadableState],
        _maxListeners: undefined,
        socket: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        rawHeaders: [Array],
        rawTrailers: [],
        joinDuplicateHeaders: undefined,
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 302,
        statusMessage: 'Found',
        client: [Socket],
        _consuming: true,
        _dumped: false,
        req: [Circular *3],
        _eventsCount: 4,
        text: 'Found. Redirecting to /',
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kHeaders)]: [Object],
        [Symbol(kHeadersCount)]: 16,
        [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0
      },
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'content-type': [Array],
        'content-length': [Array]
      },
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    text: 'Found. Redirecting to /',
    files: undefined,
    buffered: true,
    headers: {
      'x-powered-by': 'Express',
      location: '/',
      vary: 'Accept',
      'content-type': 'text/plain; charset=utf-8',
      'content-length': '23',
      'set-cookie': [
        'connect.sid=s%3AxZf5guMF1PPYA2Gc2d-roH-haJH4ndY8.YwWf5LplS1nb0CddoRjBEtJOOJ6alpLHC8EyZq1k8yk; Path=/; HttpOnly'
      ],
      date: 'Mon, 15 Jul 2024 22:43:19 GMT',
      connection: 'close'
    },
    header: {
      'x-powered-by': 'Express',
      location: '/',
      vary: 'Accept',
      'content-type': 'text/plain; charset=utf-8',
      'content-length': '23',
      'set-cookie': [
        'connect.sid=s%3AxZf5guMF1PPYA2Gc2d-roH-haJH4ndY8.YwWf5LplS1nb0CddoRjBEtJOOJ6alpLHC8EyZq1k8yk; Path=/; HttpOnly'
      ],
      date: 'Mon, 15 Jul 2024 22:43:19 GMT',
      connection: 'close'
    },
    statusCode: 302,
    status: 302,
    statusType: 3,
    info: false,
    ok: false,
    redirect: true,
    clientError: false,
    serverError: false,
    error: false,
    created: false,
    accepted: false,
    noContent: false,
    badRequest: false,
    unauthorized: false,
    notAcceptable: false,
    forbidden: false,
    notFound: false,
    unprocessableEntity: false,
    type: 'text/plain',
    charset: 'utf-8',
    links: {},
    setEncoding: [Function: bound ],
    redirects: [],
    pipe: [Function (anonymous)],
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false
  }